<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2013 Les Hazlewood
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.leshazlewood.scms</groupId>
    <artifactId>scms-root</artifactId>
    <version>0.4.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>SCMS</name>
    <description>Simple Content Management System</description>
    <inceptionYear>2013</inceptionYear>

    <url>https://github.com/lhazlewood/scms</url>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:lhazlewood/scms.git</connection>
        <developerConnection>scm:git:git@github.com:lhazlewood/scms.git</developerConnection>
        <url>http://github.com/lhazlewood/scms</url>
        <tag>HEAD</tag>
    </scm>
    <issueManagement>
        <system>GitHub</system>
        <url>http://github.com/lhazlewood/scms/issues</url>
    </issueManagement>

    <developers>
        <developer>
            <id>lhazlewood</id>
            <name>Les Hazlewood</name>
            <email>les@hazlewood.com</email>
            <url>http://www.leshazlewood.com</url>
            <timezone>-8</timezone>
        </developer>
    </developers>

  <modules>
    <module>api</module>
    <module>renderer/velocity</module>
    <module>renderer/markdown</module>
    <module>core</module>
    <module>cli</module>
    <module>dist</module>
  </modules>

    <properties>

        <!-- Don't let JDK 8 JavaDoc linter yell: -->
        <additionalparam>-Xdoclint:none</additionalparam>

        <!-- Standard Dependencies: -->
        <commons.cli.version>1.3.1</commons.cli.version>
        <slf4j.version>1.7.30</slf4j.version>
    <velocity.version>2.2</velocity.version>
        <pegdown.version>1.6.0</pegdown.version>
        <groovy.version>3.0.7</groovy.version>

      <!-- Test Dependencies: -->
      <easymock.version>3.4</easymock.version>
      <dependency.junit.jupiter.version>5.7.0</dependency.junit.jupiter.version>
      <dependency.hamcrest.version>2.2</dependency.hamcrest.version>
      <logback.version>1.2.3</logback.version>

        <!-- plugins -->
        <plugin.spotless.version>2.7.0</plugin.spotless.version>
      <plugin.compiler.version>3.8.1</plugin.compiler.version>
      <plugin.invoker.version>3.2.1</plugin.invoker.version>
      <plugin.jar.version>3.2.0</plugin.jar.version>
      <plugin.gmavenplus.version>1.12.1</plugin.gmavenplus.version>
      <plugin.surefire.version>2.22.2</plugin.surefire.version>
      <plugin.failsafe.version>2.22.2</plugin.failsafe.version>
    </properties>

  <!-- forced dependencies -->
  <dependencies>

    <!-- Test Dependencies: -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${dependency.junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.hamcrest/hamcrest-library -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <version>${dependency.hamcrest.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
        <groupId>org.easymock</groupId>
        <artifactId>easymock</artifactId>
        <version>${easymock.version}</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <scope>test</scope>
    </dependency>

  </dependencies>

  <dependencyManagement>

    <dependencies>

      <!-- Intraproject libs: -->
      <dependency>
        <groupId>io.github.scms</groupId>
        <artifactId>scms-api</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.scms.renderer</groupId>
        <artifactId>scms-renderer-velocity</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>io.github.scms.renderer</groupId>
        <artifactId>scms-renderer-markdown</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
          <groupId>com.leshazlewood.scms</groupId>
          <artifactId>scms-core</artifactId>
          <version>${project.version}</version>
      </dependency>
      <dependency>
          <groupId>com.leshazlewood.scms</groupId>
          <artifactId>scms-cli</artifactId>
          <version>${project.version}</version>
      </dependency>

      <!-- 3rd party dependencies: -->
      <dependency>
          <groupId>org.apache.velocity</groupId>
          <artifactId>velocity-engine-core</artifactId>
          <version>${velocity.version}</version>
      </dependency>
      <dependency>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy</artifactId>
          <version>${groovy.version}</version>
      </dependency>
      <dependency>
          <groupId>org.pegdown</groupId>
          <artifactId>pegdown</artifactId>
          <version>${pegdown.version}</version>
      </dependency>
      <dependency>
          <!-- used for the command line executable: -->
          <groupId>commons-cli</groupId>
          <artifactId>commons-cli</artifactId>
          <version>${commons.cli.version}</version>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-api</artifactId>
          <version>${slf4j.version}</version>
      </dependency>

      <!-- Test Libraries: -->
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${dependency.junit.jupiter.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-simple</artifactId>
          <version>${slf4j.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <!-- Required for any libraries that expect to call the commons logging APIs -->
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
          <version>${slf4j.version}</version>
          <scope>test</scope>
      </dependency>
      <dependency>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
          <version>${logback.version}</version>
          <scope>test</scope>
      </dependency>

    </dependencies>

  </dependencyManagement>

    <build>
      <pluginManagement>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${plugin.compiler.version}</version>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-invoker-plugin</artifactId>
            <version>${plugin.invoker.version}</version>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>${plugin.jar.version}</version>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${plugin.surefire.version}</version>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${plugin.failsafe.version}</version>
          </plugin>

          <plugin>
            <groupId>org.codehaus.gmavenplus</groupId>
            <artifactId>gmavenplus-plugin</artifactId>
            <version>${plugin.gmavenplus.version}</version>
            <dependencies>
              <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>${groovy.version}</version>
              </dependency>
            </dependencies>
          </plugin>

          <plugin>
            <groupId>com.diffplug.spotless</groupId>
            <artifactId>spotless-maven-plugin</artifactId>
            <version>${plugin.spotless.version}</version>
          </plugin>
        </plugins>
      </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <!-- For unit tests: -->
                <groupId>org.codehaus.gmavenplus</groupId>
                <artifactId>gmavenplus-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>addTestSources</goal>
                          <goal>generateTestStubs</goal>
                            <goal>compileTests</goal>
                            <goal>removeTestStubs</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4.2</version>
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.scm</groupId>
                        <artifactId>maven-scm-provider-gitexe</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <mavenExecutorId>forked-path</mavenExecutorId>
                    <useReleaseProfile>false</useReleaseProfile>
                    <arguments>-DskipTests -Pdocs,signature</arguments>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <configuration>
                    <!-- license header update -->
                    <ratchetFrom>origin/master</ratchetFrom>

                    <java>
                        <includes>
                            <include>src/main/java/**/*.java</include>
                            <include>src/test/java/**/*.java</include>
                            <include>src/it/projects/**/*.java</include>
                        </includes>

                        <removeUnusedImports />
                        <importOrder />

                        <!-- apply a specific flavor of google-java-format -->
                        <googleJavaFormat>
                            <style>GOOGLE</style>
                        </googleJavaFormat>

                        <!-- make sure every file has the following copyright header.
                          optionally, Spotless can set copyright years by digging
                          through git history (see "license" section below) -->
                        <licenseHeader>
                            <!--suppress MavenModelInspection -->
                            <file>${maven.multiModuleProjectDirectory}/build/license-header.java.txt</file>
                        </licenseHeader>
                    </java>

                    <groovy>
                        <!-- These are the defaults, you can override if you want -->
                        <includes>
                            <include>src/main/groovy/**/*.groovy</include>
                            <include>src/test/groovy/**/*.groovy</include>
                            <include>src/it/projects/**/*.groovy</include>
                        </includes>

                        <importOrder />

                        <greclipse>
                            <!--suppress MavenModelInspection -->
                            <file>${maven.multiModuleProjectDirectory}/build/greclipse.properties</file>
                        </greclipse>

                        <licenseHeader>
                            <!--suppress MavenModelInspection -->
                            <file>${maven.multiModuleProjectDirectory}/build/license-header.java.txt</file>
                        </licenseHeader>
                    </groovy>
                </configuration>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>signature</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>1.6</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docs</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.2.0</version>
                        <executions>
                            <execution>
                                <id>attach-api-docs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <inherited>true</inherited>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.2.1</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                        <inherited>true</inherited>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>run-its</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>mrm-maven-plugin</artifactId>
                        <version>1.2.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>start</goal>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <propertyName>mrm.repository.url</propertyName>
                            <repositories>
                                <mockRepo>
                                    <source>src/it/mrm/repository</source>
                                </mockRepo>
                                <proxyRepo />
                            </repositories>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-invoker-plugin</artifactId>
                        <configuration>
                            <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
                            <environmentVariables>
                                <!--
                                  ! Prevent reading the .mavenrc or maven_pre.bat on Windows
                                  ! in integration tests.
                                -->
                                <MAVEN_SKIP_RC>1</MAVEN_SKIP_RC>
                            </environmentVariables>
                            <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
                            <projectsDirectory>src/it/projects</projectsDirectory>
                            <pomIncludes>
                                <pomInclude>*/pom.xml</pomInclude>
                            </pomIncludes>
                            <settingsFile>src/it/mrm/settings.xml</settingsFile>
                            <filterProperties>
                                <!--suppress MavenModelInspection -->
                                <mrm.repository.url>${mrm.repository.url}</mrm.repository.url>
                            </filterProperties>
                            <goals>
                                <goal>clean</goal>
                                <goal>package</goal>
                            </goals>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-test</id>
                                <goals>
                                    <goal>install</goal>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
